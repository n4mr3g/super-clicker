'use client';

import { useState, useEffect } from 'react';
import { Player, CharStat } from '@/types/Player';
import { CharacterStatItem } from '@/components/CharacterStatItem';
import { usePlayerStore } from '@/store';
import AlertDialog from '@/components/AlertDialog';

function CharacterStats() {
  const { player } = usePlayerStore();
  return (
    <div
      className={
        'container box-border flex max-w-lg flex-col items-center justify-center border p-2'
      }
    >
      <h1>
        You have <span>{player.freeStatPoints}</span> points to assign
      </h1>
      <ul className={'flex min-w-full flex-col'}>
        {player.stats.map((stat: CharStat) => (
          <li key={stat.type}>
            <CharacterStatItem stat={stat} />
          </li>
        ))}
      </ul>
    </div>
  );
}

export default function AssignStatPointsMenu() {
  const { updatePlayer, player } = usePlayerStore();
  const [initialPlayerStats, setInitialPlayerStats] = useState<number[]>(
    player.getBulkStats(),
  );
  const [initialFreePoints, setInitialFreePoints] = useState<number>(
    player.freeStatPoints,
  );

  useEffect(() => {
    updatePlayer(player);
  }, [player, updatePlayer]);

  // useEffect(() => {
  //   const initialPlayerStats = player.getBulkStats();
  // }, []);

  function resetStats() {
    player.setBulkStats(initialPlayerStats);
    player.freeStatPoints = initialFreePoints;
    console.log('initial free points:', initialFreePoints);

    updatePlayer(player);
  }

  function applyStats() {
    updatePlayer(player);
  }

  return (
    <>
      <div></div>
      <div>
        <p>
          This is some text that will be generated by OpenAI when the character
          is created. Ideally it&apos;s funny and short.
        </p>
        <p>You have {player.freeStatPoints} to assign.</p>
        <ul>
          <li>Player Name: {player.name}</li>
          <li>Level: {player.lvl}</li>
          <li>
            Experience: {player.exp} / {player.expToLvlUp}
          </li>
          <li>
            Health: {player.currentHp} / {player.maxHp}
          </li>
        </ul>
        <CharacterStats />
        <div
          className={
            'container box-border flex max-w-xs items-center justify-evenly border p-2'
          }
        >
          <button onClick={() => resetStats()}>Reset</button>
          <AlertDialog accept={applyStats} text={'Apply'}></AlertDialog>
        </div>
      </div>
    </>
  );
}
